version: "3.6"

services:

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka-server:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka-server"
  kafka-server:
    image: obsidiandynamics/kafka
    restart: "no"
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka-server:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"

  kafka:
    build:
      context: ./kafka
      dockerfile: Dockerfile
    container_name: kafka

  spark-k8s:
    build:
      context: ./StreamProcessor
      dockerfile: Dockerfile
    container_name: spark-k8s

  cassandra:
    build:
      context: ./cassandra
      dockerfile: Dockerfile
    container_name: cassandra

  finnhubproducer:
    build:
      context: ./FinnhubProducer
      dockerfile: Dockerfile
    container_name: FinnhubProducer
    env_file:
      - ./FinnhubProducer/.env
  
  grafana:
    build:
      context: ./grafana
      dockerfile: Dockerfile
    container_name: grafana
